#!/usr/bin/env php
<?php

/** @var \Composer\Autoload\ClassLoader|null $loader */
$loader = null;

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../../vendor/autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
	if (true === file_exists($file)) {
        $loader = require_once $file;
		break;
	}
}

if (null === $loader) {
    echo 'You must set up the project dependencies using `composer install`' , PHP_EOL ,
        'See https://getcomposer.org/download/ for instructions on installing Composer' , PHP_EOL;
    exit(1);
}

// Remove bin/phx entry from arguments
array_shift($argv);
--$argc;

if ($argc === 0) {
	$handle = fopen('php://stdin', 'r');

	for (;;) {
		$line = fgets($handle);
	}

	fclose($handle);
} elseif ('-v' === $argv[0]) {
    echo 'Phx 0.0.1', PHP_EOL;
    echo 'Copyright (c) 2017 The Phx Group', PHP_EOL;
    echo 'Powered by PHP ', phpversion(), ', Copyright (c) 1997-', date('Y'), ' The PHP Group', PHP_EOL;
    exit(0);
} elseif ('-h' === $argv[0]) {
    printHelp();
} elseif ('-r' === $argv[0]) {
    if (2 !== count($argv)) {
        printHelp();
    }

    $transpiler = \Phx\Common\PhxTranspilerBuilder::create()->build();
    evalCode($transpiler->fromString('<?php ' . $argv[1]), $loader);
    exit(0);
} else {
	$scriptPath = realpath($argv[0]);

	if(false === file_exists($scriptPath)) {
		echo sprintf('Could not open input file: %s' , PHP_EOL, $argv[0]);
        exit(1);
	}

	$transpiler = \Phx\Common\PhxTranspilerBuilder::create()->build();

    $code = $transpiler->fromFile($scriptPath);

	file_put_contents(getcwd().'/dump.php', '<?php'.PHP_EOL.$code);
    evalCode($code, $loader);
	exit(0);
}

function printHelp(): string
{
    echo 'Usage: phx [options] [-f] <file> [--] [args...]' , PHP_EOL;
    echo '   -r <code>  Run PHP <code> without using script tags <?..?>' , PHP_EOL;
    echo '   -v         Version number' , PHP_EOL;
    exit(0);
}

function evalCode(string $code, \Composer\Autoload\ClassLoader $loader)
{
    $loader->unregister();
    eval($code);
}